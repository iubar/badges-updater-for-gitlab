pipeline {
    agent {    
    	docker {   	
    		image 'iubar-maven-alpine'
    		label 'docker'
    		args '-v ${HOME}/.m2:/home/jenkins/.m2:rw,z -v ${HOME}/.sonar:/home/jenkins/.sonar:rw,z'
    	} 
    }
	options {
		// Apply the ansi terminal for all stages and steps in pipeline
		ansiColor('xterm')
	}
	environment {
		MAVEN_CLI_OPTS = '--batch-mode --errors --fail-fast --show-version --quiet'
		MAVEN_OPTS = '-Dmaven.test.failure.ignore=false -Dstyle.color=always -Djava.awt.headless=true -Dhttps.protocols=TLSv1.2'
    }
    stages {
		stage('Package') {
            steps {
                sh 'mvn $MAVEN_CLI_OPTS clean package'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml' // show junit log in Jenkins 
                }
            }
        }
        stage ('Run') {
            steps {
                sh 'ls -la target'
                sh 'java -version'
                sh 'cd target && java -jar BadgesUpdater-jar-with-dependencies.jar'
            }
        }        		
    }
	post {
        changed {
        	echo "CURRENT STATUS: ${currentBuild.currentResult}"
            sh "curl -H 'JENKINS: Pipeline Hook Iubar' -i -X GET -G ${env.IUBAR_WEBHOOK_URL} -d status=${currentBuild.currentResult} -d project_name='${JOB_NAME}'"
        }
		cleanup {
			cleanWs()
			dir("${env.WORKSPACE}@tmp") {				
				deleteDir()
			}
        }
    }    
}
